:root{
	--image-bevel: 5px;
	--card-bevel: 15px;
}

main {
    min-height: calc(100vh - 160px);
}

main > p:last-of-type{
    text-align: center;
}

a.text-muted:hover{
    color: var(--secondaryColor) !important;
}

.card-holder {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    grid-template-rows: 1fr;
    gap: 20px;
    padding: 50px;
}

.random-holder {
    display: grid;
    grid-template-columns: repeat(auto-fit, 25%);
    justify-content: center;
    grid-template-rows: 1fr;
    gap: 20px;
    padding: 50px;
}

/* Cards ==================================== */


gu-config-card{
    text-align: center;
    position: relative;
    padding: 25px;
    outline: 1px white;
    background-color: var(--primaryColor);
    z-index: 10;
    max-height: 450px;
	clip-path: polygon(var(--card-bevel) 0%, calc(100% - var(--card-bevel)) 0%, 100% var(--card-bevel), 100% calc(100% - var(--card-bevel)), calc(100% - var(--card-bevel)) 100%, var(--card-bevel) 100%, 0% calc(100% - var(--card-bevel)), 0% var(--card-bevel));
}

gu-config-card .image-wrapper{
    width: calc(100% - 50px);
    height: 50%;
    margin: auto;
    display: flex;
    justify-content: center;
}

gu-config-card img{
    max-width: 100%;    
    max-height: 100%;
    margin: auto;
	clip-path: polygon(var(--image-bevel) 0%, calc(100% - var(--image-bevel)) 0%, 100% var(--image-bevel), 100% calc(100% - var(--image-bevel)), calc(100% - var(--image-bevel)) 100%, var(--image-bevel) 100%, 0% calc(100% - var(--image-bevel)), 0% var(--image-bevel));

}

gu-config-card h2{
    margin-bottom: 0;
}

gu-config-card > textarea{
    width: 100%;
    margin-top: 1em;
    min-height: 80px;
    text-align: center;
    resize: none;
    background-color: var(--primaryBackground);
    border: none;
    color: var(--textColor);
	clip-path: polygon(var(--image-bevel) 0%, calc(100% - var(--image-bevel)) 0%, 100% var(--image-bevel), 100% calc(100% - var(--image-bevel)), calc(100% - var(--image-bevel)) 100%, var(--image-bevel) 100%, 0% calc(100% - var(--image-bevel)), 0% var(--image-bevel));
    background-color: var();
}

@media only screen and (width < 920px){
    .card-holder, .random-holder{
        padding: 0 0 15px 0;
        grid-template-columns: 1fr;
    }
}
@media only screen and (width < 600px){
    main, gu-config-card{
        padding: 25px 0;
    }

    gu-config-card{
        width: 100vw;
    }

}

/* Reroll */
.reroll-customizer{
    display: flex;
    justify-content: center;
}

#reroll-btn{
    height: calc(80px + var(--card-bevel));
    width: 80px;
    border: none;
    border-radius: 0;
    background-color: var(--secondaryColor);
    background-image: url(../img/icons/dice.svg);
    background-repeat: no-repeat;
    background-position: center calc(var(--card-bevel)/2);
    background-size: 80%;
    position: relative;
    /* clip-path: polygon(10px 0px, 100% 0, 100% 100%, 10px 100%, 0px 70px, 0px 10px); */
    transition: clip-path 500ms ease-in-out, background 200ms ease-in-out;
    clip-path: polygon(var(--card-bevel) 0%, 100% 0, 100% 100%, calc(100% - var(--card-bevel)) calc(100% - var(--card-bevel)), var(--card-bevel) calc(100% - var(--card-bevel)), 0 calc(100% - var(--card-bevel) * 2), 0% var(--card-bevel));
}

#reroll-btn:hover{
    clip-path: polygon(var(--image-bevel) 0%, 100% 0, 100% 100%, calc(100% - var(--card-bevel)) calc(100% - var(--card-bevel)), var(--image-bevel) calc(100% - var(--card-bevel)), 0 calc(100% - var(--image-bevel) * 4), 0% var(--image-bevel));
    background-size: 90%;
    background-position: center calc(var(--card-bevel)/4);
}

#reroll-btn:active{
    background-size: 70%;
    background-position: center calc(var(--card-bevel)/1.5);
    background-color: var(--secondaryColorDark);

}

.modifiers{
    background-color: var(--primaryColor);
    padding: 12px;
    display: flex;
    flex-direction: column;
    text-align: center;
    clip-path: polygon(0 0, calc(100% - var(--card-bevel)) 0%, 100% var(--card-bevel), 100% calc(100% - var(--card-bevel)), calc(100% - var(--card-bevel)) 100%, var(--card-bevel) 100%, 0% calc(100% - var(--card-bevel)));
}

.modifiers label{
    display: flex;
    flex-direction: column;
    flex: 1;
    justify-content: center;
}

.modifiers input{
    appearance: none;
    border: 2px solid var(--textColor);
    width: 20px;
    height: 20px;
    margin: 0 auto 3px;
    position: relative;
    transform: rotate(45deg);
}

.modifiers input:checked::after{
    content: "";
    position: absolute;
    width: calc(100% - 2px);
    left: 1px;
    height: calc(100% - 2px);
    top: 1px;
    background-color: var(--textColor);
}